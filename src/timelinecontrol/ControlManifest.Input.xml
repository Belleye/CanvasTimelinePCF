<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="belleye" constructor="timelinecontrol" version="1.0.0" display-name-key="CanvasTimelinePCF" description-key="https://github.com/Belleye/CanvasTimelinePCF" control-type="standard" >
    
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->

    <property name="reloadTimeline" display-name-key="Reload Timeline" description-key="Reloads the timeline when change detected" of-type="SingleLine.Text" usage="bound" required="true" />
    <property name="reloadData" display-name-key="Reload Data Items" description-key="Reloads the data items when change detected" of-type="SingleLine.Text" usage="bound" required="true" />
    <property name="editMode" display-name-key="Edit Mode" description-key="Determines the edit state of the component" of-type="TwoOptions" usage="input" required="false" />

    <property name="customCss" display-name-key="Custom CSS" description-key="Custom CSS formatting for the timeline" of-type="SingleLine.Text" usage="bound" required="true" />
    <property name="datagroups" display-name-key="Data Groups" description-key="Y axis labels and groups in JSON" of-type="SingleLine.Text" usage="bound" required="true" />
    <property name="dataitems" display-name-key="Data Items" description-key="data items in JSON" of-type="SingleLine.Text" usage="bound" required="true" />

    <property name="optionStart" display-name-key="Start Datetime" description-key="Start of the timeline x axis" of-type="DateAndTime.DateAndTime" usage="input" required="true" />
    <property name="optionEnd" display-name-key="End Datetime" description-key="End of the timeline x axis" of-type="DateAndTime.DateAndTime" usage="input" required="true" />
    <property name="optionStack" display-name-key="Stack" description-key="Stacking option" of-type="TwoOptions" usage="input" required="false" />
    <property name="optionStackSubgroups" display-name-key="Stack Sub-Groups" description-key="Stacking option for sub groups" of-type="TwoOptions" usage="input" required="false" />
    <property name="optionVerticalScroll" display-name-key="Vertical Scroll" description-key="Vertical scroll option" of-type="TwoOptions" usage="input" required="false" />
    <property name="optionHorizontalScroll" display-name-key="Horizontal Scroll" description-key="Horizontal scroll option" of-type="TwoOptions" usage="input" required="false" />
    
    <property name="listItems" display-name-key="List Items" description-key="List items that can dragged into the timeline, JSON format" of-type="SingleLine.Text" usage="bound" required="true" />
    <property name="listCSS" display-name-key="List Item CSS" description-key="List items CSS Formatting" of-type="SingleLine.Text" usage="bound" required="true" />
    
    

    <!-- Outputs section -->
    <property name="selectedItem" display-name-key="Selected Item" description-key="The ID of the selected item" of-type="SingleLine.Text" usage="output" />
    <property name="timelineJSON" display-name-key="Timeline JSON" description-key="The edited timeline JSON" of-type="SingleLine.Text" usage="output" />
    <property name="selectedModifer" display-name-key="Select Modifier" description-key="The button pressed during selection" of-type="SingleLine.Text" usage="output" />
    <property name="timelineStart" display-name-key="Start of the timeline" description-key="Start of the timeline" of-type="DateAndTime.DateAndTime" usage="output" />
    <property name="timelineEnd" display-name-key="End of the timeline" description-key="End of the timeline" of-type="DateAndTime.DateAndTime" usage="output" />
    <property name="removedJSON" display-name-key="Removed item ids" description-key="A JSON string of removed items" of-type="SingleLine.Text" usage="output" />

    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <css path="..\node_modules\vis-timeline\dist\vis-timeline-graph2d.min.css" order="1" />
      
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/timelinecontrol.css" order="2" />
      <resx path="strings/timelinecontrol.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>
